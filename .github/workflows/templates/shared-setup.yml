name: shared-setup

description: >
  Template para etapas comuns: checkout, setup Python, instalar dependências, cache pip

inputs:
  python-version:
    description: 'Versão do Python'
    required: true
    default: '3.12'
  cache-key:
    description: 'Chave para cache do pip'
    required: true

runs:
  using: "composite"
  steps:
    - name: 🔄 Checkout do código
      uses: actions/checkout@v4

    - name: 🐍 Configurar Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: 💾 Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ inputs.cache-key }}
        restore-keys: ${{ inputs.cache-key }}

    - name: 📦 Instalar dependências
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt -r requirements-dev.txt
        name: CI Pipeline

        on:
          push:
            branches: [ "main" ]
          pull_request:
            branches: [ "main" ]

        permissions:
          contents: read
          issues: write
          security-events: write

        jobs:
          lint-type:
            name: Lint & Type Check
            runs-on: ubuntu-latest
            steps:
              - uses: actions/checkout@v3
              - uses: actions/setup-python@v4
                with:
                  python-version: "3.10"
              - run: |
                  python -m pip install --upgrade pip
                  pip install flake8 mypy
              - run: flake8 .
              - run: mypy .

          test:
            name: Testes
            runs-on: ubuntu-latest
            steps:
              - uses: actions/checkout@v3
              - uses: actions/setup-python@v4
                with:
                  python-version: "3.10"
              - run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pytest pytest-cov
              - name: Rodar testes com cobertura
                id: run-tests
                run: |
                  pytest --cov=. --cov-report=term-missing --cov-report=xml:coverage.xml | tee test_output.log
              - name: Upload cobertura
                uses: actions/upload-artifact@v4
                with:
                  name: coverage-report
                  path: coverage.xml
              - name: Upload log de testes
                if: always()
                uses: actions/upload-artifact@v4
                with:
                  name: test-log
                  path: test_output.log

          create-issue:
            name: Criar Issue se falhar
            needs: test
            runs-on: ubuntu-latest
            if: failure()  # só roda se o job de testes falhar
            steps:
              - uses: actions/checkout@v3
              - name: Baixar log de testes
                uses: actions/download-artifact@v4
                with:
                  name: test-log
                  path: .
              - name: Gerar descrição da issue
                run: |
                  echo "### Falha detectada na pipeline 🚨" > issue_body.md
                  echo "- **Repositório**: ${{ github.repository }}" >> issue_body.md
                  echo "- **Branch**: ${{ github.ref_name }}" >> issue_body.md
                  echo "- **Commit**: ${{ github.sha }}" >> issue_body.md
                  echo "- **Rodada**: [Ver execução do workflow](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> issue_body.md
                  echo "" >> issue_body.md
                  echo "### Log do erro (últimas 50 linhas)" >> issue_body.md
                  echo '```' >> issue_body.md
                  tail -n 50 test_output.log >> issue_body.md || true
                  echo '```' >> issue_body.md
              - name: Criar issue
                uses: peter-evans/create-issue-from-file@v4
                with:
                  title: "🚨 Falha nos testes - Commit ${{ github.sha }} em ${{ github.ref_name }}"
                  content-filepath: issue_body.md
                  labels: bug, pipeline

          security:
            name: Análise de Segurança
            runs-on: ubuntu-latest
            steps:
              - uses: actions/checkout@v3
              - uses: actions/setup-python@v4
                with:
                  python-version: "3.10"
              - run: |
                  python -m pip install bandit
                  bandit -r . || true
